const express = require('express');
const msgbkrMethods = require('../lib/index');
const {log} = require('utils-nxg-cg');

const app = express();
app.use(express.json());

const PORT = process.env.PORT || 5000;

/**
 * Method that requests a creation of a listener for a queue
 *
 * @param req the request
 * @param res the responce
 *
 */
app.post('/errorQueueListener', async (req, res) => {
	log.info('Inside error queue listener.');
	try {
		
		msgbkrMethods.errorQueueListener();
		res.json({"result":"Succesfully"});
		
	} catch (e) {
        log.error(`ERROR: ${e}`);
        res.status(500).json(e);
    }
    log.info('Finished error queue listener.');
});

/**
 * Method that requests a creation of a produces a message to a specific queue
 *
 * @param req the request
 * @param res the responce
 *
 */
app.post('/producerMessage', async (req, res) => {
	log.info('Inside producer message.')
	try {
		
		msgbkrMethods.producerMessage(req.body, 'myqueue');
		res.json({"result":"Succesfully"});
		
	} catch (e) {
        log.error(`ERROR: ${e}`);
        res.status(500).json(e);
    }
    log.info('Finished producer message.');
});

/**
 * Method that requests a creation of a produces an error message to a specific queue
 *
 * @param req the request
 * @param res the responce
 *
 */
app.post('/producerErrorMessage', async (req, res) => {
	log.info('Inside producer error message.')
	let msg
	try {
		msg = req.body;
		const {data} = req.body;
		
		throw new Error(`Testing error created... ${JSON.stringify(data)}`);
		//res.json({"result":"Succesfully"});
		
	} catch (e) {
        log.error(`ERROR: ${e}`);
        msgbkrMethods.producerErrorMessage(msg, e);
        res.status(500).json(e);
    }
    log.info('Finished producer error message.');
});

app.listen(PORT, () => log.info('Service up in port', PORT));